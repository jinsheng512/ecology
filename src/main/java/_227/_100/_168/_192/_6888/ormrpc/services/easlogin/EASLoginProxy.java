package _227._100._168._192._6888.ormrpc.services.easlogin;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import client.WSContext;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 */
@WebService(name = "EASLoginProxy", targetNamespace = "http://192.168.100.227:6888/ormrpc/services/EASLogin")
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface EASLoginProxy {

    /**
     * @param dcName
     * @param userName
     * @param language
     * @param dbType
     * @param slnName
     * @param password
     * @return
     *         returns client.WSContext
     */
    @WebMethod
    @WebResult(name = "loginReturn", partName = "loginReturn")
    public WSContext login(@WebParam(name = "userName", partName = "userName") String userName,
            @WebParam(name = "password", partName = "password") String password, @WebParam(name = "slnName", partName = "slnName") String slnName,
            @WebParam(name = "dcName", partName = "dcName") String dcName, @WebParam(name = "language", partName = "language") String language,
            @WebParam(name = "dbType", partName = "dbType") int dbType);

    /**
     * @param authPattern
     * @param dcName
     * @param userName
     * @param language
     * @param dbType
     * @param slnName
     * @param password
     * @return
     *         returns client.WSContext
     */
    @WebMethod
    @WebResult(name = "loginReturn", partName = "loginReturn")
    public WSContext login(@WebParam(name = "userName", partName = "userName") String userName,
            @WebParam(name = "password", partName = "password") String password, @WebParam(name = "slnName", partName = "slnName") String slnName,
            @WebParam(name = "dcName", partName = "dcName") String dcName, @WebParam(name = "language", partName = "language") String language,
            @WebParam(name = "dbType", partName = "dbType") int dbType, @WebParam(name = "authPattern", partName = "authPattern") String authPattern);

    /**
     * @param authPattern
     * @param dcName
     * @param isEncodePwd
     * @param userName
     * @param language
     * @param dbType
     * @param slnName
     * @param password
     * @return
     *         returns client.WSContext
     */
    @WebMethod
    @WebResult(name = "loginReturn", partName = "loginReturn")
    public WSContext login(@WebParam(name = "userName", partName = "userName") String userName,
            @WebParam(name = "password", partName = "password") String password, @WebParam(name = "slnName", partName = "slnName") String slnName,
            @WebParam(name = "dcName", partName = "dcName") String dcName, @WebParam(name = "language", partName = "language") String language,
            @WebParam(name = "dbType", partName = "dbType") int dbType, @WebParam(name = "authPattern", partName = "authPattern") String authPattern,
            @WebParam(name = "isEncodePwd", partName = "isEncodePwd") int isEncodePwd);

    /**
     * @param dcName
     * @param userName
     * @param language
     * @param slnName
     * @return
     *         returns boolean
     */
    @WebMethod
    @WebResult(name = "logoutReturn", partName = "logoutReturn")
    public boolean logout(@WebParam(name = "userName", partName = "userName") String userName,
            @WebParam(name = "slnName", partName = "slnName") String slnName, @WebParam(name = "dcName", partName = "dcName") String dcName,
            @WebParam(name = "language", partName = "language") String language);

}
